set pages 200
set lines 200
col OWNER format a20
col TABLE_NAME format a30
select owner,table_name,round((blocks*8),2)/1024/1024 "size (Gb)" , 
round((num_rows*avg_row_len/1024),2)/1024/1024 "actual_data (Gb)",
(round((blocks*8),2) - round((num_rows*avg_row_len/1024),2))/1024/1024 "wasted_space (Gb)"
from dba_tables
where 
(round((blocks*8),2) > round((num_rows*avg_row_len/1024),2))
and 
table_name in 
(select segment_name from (select owner, segment_name, bytes/1024/1024 meg from dba_segments
where tablespace_name ='SYSAUX'  AND
segment_type = 'TABLE'
order by bytes/1024/1024 desc) 
where rownum <= 20)
order by 5 desc;
########################################################################################
select tablespace_name,
file_id,
file_name DATA_FILE_NAME,
Allocated_MBYTES,
High_Water_Mark_MBYTES,
FREE_MBYTES,
trunc((FREE_MBYTES/Allocated_MBYTES)*100,2) "% Free",
trunc(Allocated_MBYTES-High_Water_Mark_MBYTES,2) Resizable
from
(
select ddf.tablespace_name tablespace_name,
ddf.file_id file_id,
ddf.file_name file_name,
ddf.bytes/1024/1024 Allocated_MBYTES,
trunc((ex.hwm*(dt.block_size))/1024/1024,2) High_Water_Mark_MBYTES,
FREE_MBYTES
from
dba_data_files ddf,
dba_tablespaces dt,
(
select file_id, sum(bytes/1024/1024) FREE_MBYTES
from dba_free_space
group by file_id
) free,
(
select file_id, max(block_id+blocks) hwm
from dba_extents
group by file_id
) ex
where ddf.file_id = ex.file_id
and ddf.tablespace_name = dt.tablespace_name
and ddf.file_id = free.file_id (+)
order by ddf.tablespace_name, ddf.file_id
);
########################################################################################
SELECT a.tablespace_name,
trunc (b.used_percent,2) used_percent,
trunc (b.used_space * a.block_size/1024/1024,2) used_space_MB
c.free_mb, trunc (b.tablespace_size * a.block_size/1024/1024,2) tablespace_max_size_MB
FROM dba_tablespaces a ,
dba_tablespace_usage_metrics b,
( SELECT tablespace_name, SUM (bytes) /1024 / 1024 free_mb
FROM dba_free_space
GROUP BY tablespace_name) c
WHERE a.tablespace_name = b.tablespace_name
AND b.tablespace_name = c.tablespace_name
AND a.contents = 'PERMANENT'
AND a.tablespace_name = 'SYSAUX';
########################################################################################

alter table WRH$_SQL_PLAN move;

select 'alter index ' || owner || '.'|| index_name || ' rebuild; '
from  dba_indexes
where  status = 'UNUSABLE';

EXEC DBMS_STATS.GATHER_TABLE_STATS(OWNNAME=>'SYS', TABNAME=>'WRH$_SQL_PLAN', cascade=>true);

########################################################################################
alter table WRH$_SQLTEXT enable row movement;
alter table WRH$_SQLTEXT shrink space compact;
alter table WRH$_SQLTEXT shrink space;

EXEC DBMS_STATS.GATHER_TABLE_STATS(OWNNAME=>'SYS', TABNAME=>'WRH$_SQL_PLAN', cascade=>true);


select 'alter index ' || owner || '.'|| index_name || ' rebuild; '
from  dba_indexes
where  status = 'UNUSABLE';
########################################################################################

Create table DEMO as select * from dba_objects;

EXEC DBMS_STATS.GATHER_TABLE_STATS(OWNNAME=>'SYS', TABNAME=>'demo', cascade=>true);

select blocks as Ever_Used, empty_blocks as Never_Used, num_rows as Total_rows from user_tables 
where table_name='DEMO';

Delete from DEMO where OBJECT_TYPE='SEQUENCE';
Delete from DEMO where OBJECT_TYPE='TABLE';
Delete from DEMO where OBJECT_TYPE='LOB';
Delete from DEMO where OBJECT_TYPE='INDEX';
Delete from DEMO where OBJECT_TYPE='TYPE';

Commit;

EXEC DBMS_STATS.GATHER_TABLE_STATS(OWNNAME=>'SYS', TABNAME=>'demo', cascade=>true);

MOSTRAR TOTAL DE LINHAS DA TAB E BLOCOS ULTILIZADOS
select blocks as Ever_Used, empty_blocks as Never_Used, num_rows as Total_rows from user_tables 
where table_name='DEMO';


DADOS REAIS 
select table_name,round((blocks*8),2)||'kb'  from user_tables where table_name = 'DEMO';

DADOS FRAGMENTADOS
select table_name,round((num_rows*avg_row_len/1024),2)||'kb'  from user_tables where table_name = 'DEMO'; 

EFETUAR O REORG
alter table demo move;

COLETAR STATISTICAS
EXEC DBMS_STATS.GATHER_TABLE_STATS(OWNNAME=>'SYS', TABNAME=>'demo', cascade=>true);

VISUALIZA OS INDEX
select status,index_name from user_indexes Where table_name = 'DEMO';

